#!/usr/bin/env bash

# This is a work in progres....


# Close any open System Preferences panes, to prevent them from overriding
# settings weâ€™re about to change
osascript -e 'tell application "System Preferences" to quit'

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
###############################################################################
# My Customizations 
###############################################################################

echo "Hello $(whoami)! Let's get you set up."

echo "mkdir -p ${HOME}/code"
mkdir -p "${HOME}/code"

# xcode-select install here?

echo "installing homebrew"
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"


echo "brew installing stuff"
brew install git 

echo "node --version: $(node --version)"
echo "npm --version: $(npm --version)"

echo "installing apps with brew cask"
brew cask install alfred google-chrome visual-studio-code slack spectacle 

# echo "Generating an RSA token for GitHub"
# mkdir -p ~/.ssh
# touch ~/.ssh/config
# ssh-keygen -t rsa -b 4096 -C "nathaniel.hall@gmail.com"
# echo "Host *\n AddKeysToAgent yes\n UseKeychain yes\n IdentityFile ~/.ssh/id_rsa" | tee ~/.ssh/config
# eval "$(ssh-agent -s)"
# echo "run 'pbcopy < ~/.ssh/id_rsa.pub' and paste that into GitHub"

echo "cloning configuration files"
git clone git@github.com:nathanielhall/configuration.git "${HOME}/configuration"
ln -s "${HOME}/configuration/.zshrc" "${HOME}/.zshrc"
ln -s "${HOME}/configuration/.vimrc" "${HOME}/.vimrc"

###############################################################################
# General UI/UX                                                               #
###############################################################################

###############################################################################
# Kill affected applications                                                  #
###############################################################################

for app in "Activity Monitor" \
	"Address Book" \
	"Calendar" \
	"cfprefsd" \
	"Contacts" \
	"Dock" \
	"Finder" \
	"Google Chrome" \
	"Mail" \
	"Messages" \
	"Photos" \
	"Spectacle" \
	"SystemUIServer" \
	"Terminal" \
	"Transmission" \
	"iCal"; do
	killall "${app}" &> /dev/null
done
echo "Done. Note that some of these changes require a logout/restart to take effect."
